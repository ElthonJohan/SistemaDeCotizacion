// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeCotizacion.Data;

#nullable disable

namespace SistemaDeCotizacion.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20251006122556_Migracion2_1")]
    partial class Migracion2_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cliente", b =>
                {
                    b.Property<int>("cliente_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cliente_id"));

                    b.Property<string>("correo_cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("direccion_cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("fecha_registro_cliente")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre_cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ruc")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("telefono_cliente")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("usuario_id")
                        .HasColumnType("int");

                    b.HasKey("cliente_id");

                    b.HasIndex("correo_cliente")
                        .IsUnique();

                    b.HasIndex("ruc")
                        .IsUnique();

                    b.HasIndex("usuario_id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cotizacion", b =>
                {
                    b.Property<int>("cotizacion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cotizacion_id"));

                    b.Property<int?>("cliente_id")
                        .HasColumnType("int");

                    b.Property<double>("costo_repuesto_total")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<double>("costo_servicio_total")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<string>("estado_cotizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_cotizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("formaPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("tiempoEntrega")
                        .HasColumnType("int");

                    b.HasKey("cotizacion_id");

                    b.HasIndex("cliente_id");

                    b.ToTable("Cotizacion", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.DetalleRepuesto", b =>
                {
                    b.Property<int>("detalleRepuesto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("detalleRepuesto_id"));

                    b.Property<int>("cantidad_rep")
                        .HasColumnType("int");

                    b.Property<int>("cotizacion_id")
                        .HasColumnType("int");

                    b.Property<int>("repuesto_id")
                        .HasColumnType("int");

                    b.Property<double>("valor_venta")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.HasKey("detalleRepuesto_id");

                    b.HasIndex("cotizacion_id");

                    b.HasIndex("repuesto_id");

                    b.ToTable("DetalleRepuesto", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.DetalleServicio", b =>
                {
                    b.Property<int>("detalleServicio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("detalleServicio_id"));

                    b.Property<int>("cotizacion_id")
                        .HasColumnType("int");

                    b.Property<int>("servicio_id")
                        .HasColumnType("int");

                    b.HasKey("detalleServicio_id");

                    b.HasIndex("cotizacion_id");

                    b.HasIndex("servicio_id");

                    b.ToTable("DetalleServicio", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Ingreso", b =>
                {
                    b.Property<int>("ingreso_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ingreso_id"));

                    b.Property<double>("costo_ingreso")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<string>("detalle_ingreso")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("fecha_ingreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_registro_ingreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo_ingreso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("usuario_id")
                        .HasColumnType("int");

                    b.HasKey("ingreso_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("Ingreso", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Repuesto", b =>
                {
                    b.Property<int>("repuesto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("repuesto_id"));

                    b.Property<string>("codigo_rep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("fecha_registro_repuesto")
                        .HasColumnType("datetime2");

                    b.Property<string>("medida_rep")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("precio_und")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("repuesto_id");

                    b.ToTable("Repuesto", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Rol", b =>
                {
                    b.Property<int>("rol_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rol_id"));

                    b.Property<string>("rol_descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("rol_nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("rol_id");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Servicio", b =>
                {
                    b.Property<int>("servicio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("servicio_id"));

                    b.Property<DateTime>("fecha_registro_servicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre_servicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("precio")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.HasKey("servicio_id");

                    b.ToTable("Servicio", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Usuario", b =>
                {
                    b.Property<int>("usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuario_id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("num_cel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("rol_id")
                        .HasColumnType("int");

                    b.HasKey("usuario_id");

                    b.HasIndex("correo")
                        .IsUnique();

                    b.HasIndex("dni")
                        .IsUnique();

                    b.HasIndex("rol_id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Vehiculo", b =>
                {
                    b.Property<int>("vehiculo_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehiculo_id"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_registro_vehiculo")
                        .HasColumnType("datetime2");

                    b.Property<int>("kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("vehiculo_id");

                    b.HasIndex("cliente_id");

                    b.HasIndex("placa")
                        .IsUnique();

                    b.ToTable("Vehiculo", (string)null);
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cliente", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Usuario", null)
                        .WithMany("clientes")
                        .HasForeignKey("usuario_id");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cotizacion", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Cliente", null)
                        .WithMany("cotizacion")
                        .HasForeignKey("cliente_id");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.DetalleRepuesto", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Cotizacion", "cotizacion")
                        .WithMany("repuestos")
                        .HasForeignKey("cotizacion_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaDeCotizacion.Models.Repuesto", "repuesto")
                        .WithMany("detalle_repuesto")
                        .HasForeignKey("repuesto_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("cotizacion");

                    b.Navigation("repuesto");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.DetalleServicio", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Cotizacion", "cotizacion")
                        .WithMany("servicios")
                        .HasForeignKey("cotizacion_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaDeCotizacion.Models.Servicio", "servicio")
                        .WithMany("detalle_servicio")
                        .HasForeignKey("servicio_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("cotizacion");

                    b.Navigation("servicio");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Ingreso", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Usuario", "usuario")
                        .WithMany("ingresos")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Usuario", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Rol", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Vehiculo", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Cliente", "cliente")
                        .WithMany("vehiculos")
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cliente", b =>
                {
                    b.Navigation("cotizacion");

                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cotizacion", b =>
                {
                    b.Navigation("repuestos");

                    b.Navigation("servicios");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Repuesto", b =>
                {
                    b.Navigation("detalle_repuesto");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Rol", b =>
                {
                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Servicio", b =>
                {
                    b.Navigation("detalle_servicio");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Usuario", b =>
                {
                    b.Navigation("clientes");

                    b.Navigation("ingresos");
                });
#pragma warning restore 612, 618
        }
    }
}
